/*
 * ShellSmartPayAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for PrepareFuelingResponse type.
 */
public class PrepareFuelingResponse {
    private String mppTransactionId;
    private List<String> products;

    /**
     * Default constructor.
     */
    public PrepareFuelingResponse() {
    }

    /**
     * Initialization constructor.
     * @param  mppTransactionId  String value for mppTransactionId.
     * @param  products  List of String value for products.
     */
    public PrepareFuelingResponse(
            String mppTransactionId,
            List<String> products) {
        this.mppTransactionId = mppTransactionId;
        this.products = products;
    }

    /**
     * Getter for MppTransactionId.
     * The unique identifier of the Order. NB at this stage the Customer hasn’t actually bought
     * anything so there’s no formal transaction associated with the Order. A transaction is not
     * processed until refuelling has been completed successfully and will be triggered by returning
     * the nozzle to the pump.
     * @return Returns the String
     */
    @JsonGetter("mppTransactionId")
    public String getMppTransactionId() {
        return mppTransactionId;
    }

    /**
     * Setter for MppTransactionId.
     * The unique identifier of the Order. NB at this stage the Customer hasn’t actually bought
     * anything so there’s no formal transaction associated with the Order. A transaction is not
     * processed until refuelling has been completed successfully and will be triggered by returning
     * the nozzle to the pump.
     * @param mppTransactionId Value for String
     */
    @JsonSetter("mppTransactionId")
    public void setMppTransactionId(String mppTransactionId) {
        this.mppTransactionId = mppTransactionId;
    }

    /**
     * Getter for Products.
     * An array of Strings that contain the list of products that the user can purchase at the
     * specified Station/Pump. The text is localized based on the country.
     * @return Returns the List of String
     */
    @JsonGetter("products")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getProducts() {
        return products;
    }

    /**
     * Setter for Products.
     * An array of Strings that contain the list of products that the user can purchase at the
     * specified Station/Pump. The text is localized based on the country.
     * @param products Value for List of String
     */
    @JsonSetter("products")
    public void setProducts(List<String> products) {
        this.products = products;
    }

    /**
     * Converts this PrepareFuelingResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrepareFuelingResponse [" + "mppTransactionId=" + mppTransactionId + ", products="
                + products + "]";
    }

    /**
     * Builds a new {@link PrepareFuelingResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrepareFuelingResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(mppTransactionId)
                .products(getProducts());
        return builder;
    }

    /**
     * Class to build instances of {@link PrepareFuelingResponse}.
     */
    public static class Builder {
        private String mppTransactionId;
        private List<String> products;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  mppTransactionId  String value for mppTransactionId.
         */
        public Builder(String mppTransactionId) {
            this.mppTransactionId = mppTransactionId;
        }

        /**
         * Setter for mppTransactionId.
         * @param  mppTransactionId  String value for mppTransactionId.
         * @return Builder
         */
        public Builder mppTransactionId(String mppTransactionId) {
            this.mppTransactionId = mppTransactionId;
            return this;
        }

        /**
         * Setter for products.
         * @param  products  List of String value for products.
         * @return Builder
         */
        public Builder products(List<String> products) {
            this.products = products;
            return this;
        }

        /**
         * Builds a new {@link PrepareFuelingResponse} object using the set fields.
         * @return {@link PrepareFuelingResponse}
         */
        public PrepareFuelingResponse build() {
            return new PrepareFuelingResponse(mppTransactionId, products);
        }
    }
}
