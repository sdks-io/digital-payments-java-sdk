/*
 * ShellSmartPayAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for MppError type.
 */
public class MppError {
    private String message;
    private String reason;
    private String subject;
    private String subjectType;
    private String type;

    /**
     * Default constructor.
     */
    public MppError() {
    }

    /**
     * Initialization constructor.
     * @param  message  String value for message.
     * @param  reason  String value for reason.
     * @param  subject  String value for subject.
     * @param  subjectType  String value for subjectType.
     * @param  type  String value for type.
     */
    public MppError(
            String message,
            String reason,
            String subject,
            String subjectType,
            String type) {
        this.message = message;
        this.reason = reason;
        this.subject = subject;
        this.subjectType = subjectType;
        this.type = type;
    }

    /**
     * Getter for Message.
     * Descriptive, human readable error message. Description of the error (e.g. This field is
     * required and must to be between 1 and 255 characters long)
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * Descriptive, human readable error message. Description of the error (e.g. This field is
     * required and must to be between 1 and 255 characters long)
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Reason.
     * Additional classification specific for each error type e.g. 'noStock'. The nature of the
     * issue (e.g. missing)
     * @return Returns the String
     */
    @JsonGetter("reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * Additional classification specific for each error type e.g. 'noStock'. The nature of the
     * issue (e.g. missing)
     * @param reason Value for String
     */
    @JsonSetter("reason")
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * Getter for Subject.
     * Identifier of the related object e.g. '1'. The field/attribute with an issue (e.g. First
     * Name)
     * @return Returns the String
     */
    @JsonGetter("subject")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSubject() {
        return subject;
    }

    /**
     * Setter for Subject.
     * Identifier of the related object e.g. '1'. The field/attribute with an issue (e.g. First
     * Name)
     * @param subject Value for String
     */
    @JsonSetter("subject")
    public void setSubject(String subject) {
        this.subject = subject;
    }

    /**
     * Getter for SubjectType.
     * Type of the object related to the error e.g. 'entry'. The item it relates to (e.g. Parameter)
     * @return Returns the String
     */
    @JsonGetter("subjectType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSubjectType() {
        return subjectType;
    }

    /**
     * Setter for SubjectType.
     * Type of the object related to the error e.g. 'entry'. The item it relates to (e.g. Parameter)
     * @param subjectType Value for String
     */
    @JsonSetter("subjectType")
    public void setSubjectType(String subjectType) {
        this.subjectType = subjectType;
    }

    /**
     * Getter for Type.
     * Type of the error e.g. 'LowStockError', 'Validation Error'
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Type of the error e.g. 'LowStockError', 'Validation Error'
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Converts this MppError into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MppError [" + "message=" + message + ", reason=" + reason + ", subject=" + subject
                + ", subjectType=" + subjectType + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link MppError.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MppError.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .message(getMessage())
                .reason(getReason())
                .subject(getSubject())
                .subjectType(getSubjectType())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link MppError}.
     */
    public static class Builder {
        private String message;
        private String reason;
        private String subject;
        private String subjectType;
        private String type;



        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for reason.
         * @param  reason  String value for reason.
         * @return Builder
         */
        public Builder reason(String reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Setter for subject.
         * @param  subject  String value for subject.
         * @return Builder
         */
        public Builder subject(String subject) {
            this.subject = subject;
            return this;
        }

        /**
         * Setter for subjectType.
         * @param  subjectType  String value for subjectType.
         * @return Builder
         */
        public Builder subjectType(String subjectType) {
            this.subjectType = subjectType;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link MppError} object using the set fields.
         * @return {@link MppError}
         */
        public MppError build() {
            return new MppError(message, reason, subject, subjectType, type);
        }
    }
}
