/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PaymentDetailsItems type.
 */
public class PaymentDetailsItems {
    private String paymentCategory;
    private String paymentMethodId;
    private PaymentProperties paymentProperties;

    /**
     * Default constructor.
     */
    public PaymentDetailsItems() {
    }

    /**
     * Initialization constructor.
     * @param  paymentMethodId  String value for paymentMethodId.
     * @param  paymentProperties  PaymentProperties value for paymentProperties.
     * @param  paymentCategory  String value for paymentCategory.
     */
    public PaymentDetailsItems(
            String paymentMethodId,
            PaymentProperties paymentProperties,
            String paymentCategory) {
        this.paymentCategory = paymentCategory;
        this.paymentMethodId = paymentMethodId;
        this.paymentProperties = paymentProperties;
    }

    /**
     * Getter for PaymentCategory.
     * The type of commercial transaction. Permitted value\: * B2B
     * @return Returns the String
     */
    @JsonGetter("paymentCategory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPaymentCategory() {
        return paymentCategory;
    }

    /**
     * Setter for PaymentCategory.
     * The type of commercial transaction. Permitted value\: * B2B
     * @param paymentCategory Value for String
     */
    @JsonSetter("paymentCategory")
    public void setPaymentCategory(String paymentCategory) {
        this.paymentCategory = paymentCategory;
    }

    /**
     * Getter for PaymentMethodId.
     * The payment method used to make the transaction. Possible values include: * euroShell
     * @return Returns the String
     */
    @JsonGetter("paymentMethodId")
    public String getPaymentMethodId() {
        return paymentMethodId;
    }

    /**
     * Setter for PaymentMethodId.
     * The payment method used to make the transaction. Possible values include: * euroShell
     * @param paymentMethodId Value for String
     */
    @JsonSetter("paymentMethodId")
    public void setPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
    }

    /**
     * Getter for PaymentProperties.
     * Object containing Payment Property details Please note: All the attributes are optional as
     * they serve all payment methods (i.e. different payment methods require different fields to be
     * filled/mandated). As a result, some of these fields will be mandatory depending on the
     * selected payment method and the API will return an error if they are not completed
     * @return Returns the PaymentProperties
     */
    @JsonGetter("paymentProperties")
    public PaymentProperties getPaymentProperties() {
        return paymentProperties;
    }

    /**
     * Setter for PaymentProperties.
     * Object containing Payment Property details Please note: All the attributes are optional as
     * they serve all payment methods (i.e. different payment methods require different fields to be
     * filled/mandated). As a result, some of these fields will be mandatory depending on the
     * selected payment method and the API will return an error if they are not completed
     * @param paymentProperties Value for PaymentProperties
     */
    @JsonSetter("paymentProperties")
    public void setPaymentProperties(PaymentProperties paymentProperties) {
        this.paymentProperties = paymentProperties;
    }

    /**
     * Converts this PaymentDetailsItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PaymentDetailsItems [" + "paymentMethodId=" + paymentMethodId
                + ", paymentProperties=" + paymentProperties + ", paymentCategory="
                + paymentCategory + "]";
    }

    /**
     * Builds a new {@link PaymentDetailsItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PaymentDetailsItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(paymentMethodId, paymentProperties)
                .paymentCategory(getPaymentCategory());
        return builder;
    }

    /**
     * Class to build instances of {@link PaymentDetailsItems}.
     */
    public static class Builder {
        private String paymentMethodId;
        private PaymentProperties paymentProperties;
        private String paymentCategory;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  paymentMethodId  String value for paymentMethodId.
         * @param  paymentProperties  PaymentProperties value for paymentProperties.
         */
        public Builder(String paymentMethodId, PaymentProperties paymentProperties) {
            this.paymentMethodId = paymentMethodId;
            this.paymentProperties = paymentProperties;
        }

        /**
         * Setter for paymentMethodId.
         * @param  paymentMethodId  String value for paymentMethodId.
         * @return Builder
         */
        public Builder paymentMethodId(String paymentMethodId) {
            this.paymentMethodId = paymentMethodId;
            return this;
        }

        /**
         * Setter for paymentProperties.
         * @param  paymentProperties  PaymentProperties value for paymentProperties.
         * @return Builder
         */
        public Builder paymentProperties(PaymentProperties paymentProperties) {
            this.paymentProperties = paymentProperties;
            return this;
        }

        /**
         * Setter for paymentCategory.
         * @param  paymentCategory  String value for paymentCategory.
         * @return Builder
         */
        public Builder paymentCategory(String paymentCategory) {
            this.paymentCategory = paymentCategory;
            return this;
        }

        /**
         * Builds a new {@link PaymentDetailsItems} object using the set fields.
         * @return {@link PaymentDetailsItems}
         */
        public PaymentDetailsItems build() {
            return new PaymentDetailsItems(paymentMethodId, paymentProperties, paymentCategory);
        }
    }
}
