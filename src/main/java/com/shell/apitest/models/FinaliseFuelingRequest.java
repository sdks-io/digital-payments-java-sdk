/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for FinaliseFuelingRequest type.
 */
public class FinaliseFuelingRequest {
    private String siteName;
    private Long timestamp;
    private Double volumeQuantity;
    private String volumeUnit;
    private Double finalPrice;
    private String currency;
    private String status;
    private String siteAddress;
    private Double originalPrice;
    private Double discount;
    private FinaliseFuelingRequestPayment payment;
    private List<FinaliseFuelingRequestProductsItems> products;
    private String mppTransactionId;

    /**
     * Default constructor.
     */
    public FinaliseFuelingRequest() {
    }

    /**
     * Initialization constructor.
     * @param  siteName  String value for siteName.
     * @param  timestamp  Long value for timestamp.
     * @param  volumeQuantity  Double value for volumeQuantity.
     * @param  volumeUnit  String value for volumeUnit.
     * @param  finalPrice  Double value for finalPrice.
     * @param  currency  String value for currency.
     * @param  status  String value for status.
     * @param  siteAddress  String value for siteAddress.
     * @param  originalPrice  Double value for originalPrice.
     * @param  discount  Double value for discount.
     * @param  payment  FinaliseFuelingRequestPayment value for payment.
     * @param  products  List of FinaliseFuelingRequestProductsItems value for products.
     * @param  mppTransactionId  String value for mppTransactionId.
     */
    public FinaliseFuelingRequest(
            String siteName,
            Long timestamp,
            Double volumeQuantity,
            String volumeUnit,
            Double finalPrice,
            String currency,
            String status,
            String siteAddress,
            Double originalPrice,
            Double discount,
            FinaliseFuelingRequestPayment payment,
            List<FinaliseFuelingRequestProductsItems> products,
            String mppTransactionId) {
        this.siteName = siteName;
        this.timestamp = timestamp;
        this.volumeQuantity = volumeQuantity;
        this.volumeUnit = volumeUnit;
        this.finalPrice = finalPrice;
        this.currency = currency;
        this.status = status;
        this.siteAddress = siteAddress;
        this.originalPrice = originalPrice;
        this.discount = discount;
        this.payment = payment;
        this.products = products;
        this.mppTransactionId = mppTransactionId;
    }

    /**
     * Getter for SiteName.
     * @return Returns the String
     */
    @JsonGetter("siteName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSiteName() {
        return siteName;
    }

    /**
     * Setter for SiteName.
     * @param siteName Value for String
     */
    @JsonSetter("siteName")
    public void setSiteName(String siteName) {
        this.siteName = siteName;
    }

    /**
     * Getter for Timestamp.
     * @return Returns the Long
     */
    @JsonGetter("timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * @param timestamp Value for Long
     */
    @JsonSetter("timestamp")
    public void setTimestamp(Long timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Getter for VolumeQuantity.
     * @return Returns the Double
     */
    @JsonGetter("volumeQuantity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getVolumeQuantity() {
        return volumeQuantity;
    }

    /**
     * Setter for VolumeQuantity.
     * @param volumeQuantity Value for Double
     */
    @JsonSetter("volumeQuantity")
    public void setVolumeQuantity(Double volumeQuantity) {
        this.volumeQuantity = volumeQuantity;
    }

    /**
     * Getter for VolumeUnit.
     * @return Returns the String
     */
    @JsonGetter("volumeUnit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVolumeUnit() {
        return volumeUnit;
    }

    /**
     * Setter for VolumeUnit.
     * @param volumeUnit Value for String
     */
    @JsonSetter("volumeUnit")
    public void setVolumeUnit(String volumeUnit) {
        this.volumeUnit = volumeUnit;
    }

    /**
     * Getter for FinalPrice.
     * @return Returns the Double
     */
    @JsonGetter("finalPrice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getFinalPrice() {
        return finalPrice;
    }

    /**
     * Setter for FinalPrice.
     * @param finalPrice Value for Double
     */
    @JsonSetter("finalPrice")
    public void setFinalPrice(Double finalPrice) {
        this.finalPrice = finalPrice;
    }

    /**
     * Getter for Currency.
     * @return Returns the String
     */
    @JsonGetter("currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for SiteAddress.
     * @return Returns the String
     */
    @JsonGetter("siteAddress")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSiteAddress() {
        return siteAddress;
    }

    /**
     * Setter for SiteAddress.
     * @param siteAddress Value for String
     */
    @JsonSetter("siteAddress")
    public void setSiteAddress(String siteAddress) {
        this.siteAddress = siteAddress;
    }

    /**
     * Getter for OriginalPrice.
     * @return Returns the Double
     */
    @JsonGetter("originalPrice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getOriginalPrice() {
        return originalPrice;
    }

    /**
     * Setter for OriginalPrice.
     * @param originalPrice Value for Double
     */
    @JsonSetter("originalPrice")
    public void setOriginalPrice(Double originalPrice) {
        this.originalPrice = originalPrice;
    }

    /**
     * Getter for Discount.
     * @return Returns the Double
     */
    @JsonGetter("discount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDiscount() {
        return discount;
    }

    /**
     * Setter for Discount.
     * @param discount Value for Double
     */
    @JsonSetter("discount")
    public void setDiscount(Double discount) {
        this.discount = discount;
    }

    /**
     * Getter for Payment.
     * @return Returns the FinaliseFuelingRequestPayment
     */
    @JsonGetter("payment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FinaliseFuelingRequestPayment getPayment() {
        return payment;
    }

    /**
     * Setter for Payment.
     * @param payment Value for FinaliseFuelingRequestPayment
     */
    @JsonSetter("payment")
    public void setPayment(FinaliseFuelingRequestPayment payment) {
        this.payment = payment;
    }

    /**
     * Getter for Products.
     * @return Returns the List of FinaliseFuelingRequestProductsItems
     */
    @JsonGetter("products")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<FinaliseFuelingRequestProductsItems> getProducts() {
        return products;
    }

    /**
     * Setter for Products.
     * @param products Value for List of FinaliseFuelingRequestProductsItems
     */
    @JsonSetter("products")
    public void setProducts(List<FinaliseFuelingRequestProductsItems> products) {
        this.products = products;
    }

    /**
     * Getter for MppTransactionId.
     * @return Returns the String
     */
    @JsonGetter("mppTransactionId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMppTransactionId() {
        return mppTransactionId;
    }

    /**
     * Setter for MppTransactionId.
     * @param mppTransactionId Value for String
     */
    @JsonSetter("mppTransactionId")
    public void setMppTransactionId(String mppTransactionId) {
        this.mppTransactionId = mppTransactionId;
    }

    /**
     * Converts this FinaliseFuelingRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FinaliseFuelingRequest [" + "siteName=" + siteName + ", timestamp=" + timestamp
                + ", volumeQuantity=" + volumeQuantity + ", volumeUnit=" + volumeUnit
                + ", finalPrice=" + finalPrice + ", currency=" + currency + ", status=" + status
                + ", siteAddress=" + siteAddress + ", originalPrice=" + originalPrice
                + ", discount=" + discount + ", payment=" + payment + ", products=" + products
                + ", mppTransactionId=" + mppTransactionId + "]";
    }

    /**
     * Builds a new {@link FinaliseFuelingRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FinaliseFuelingRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .siteName(getSiteName())
                .timestamp(getTimestamp())
                .volumeQuantity(getVolumeQuantity())
                .volumeUnit(getVolumeUnit())
                .finalPrice(getFinalPrice())
                .currency(getCurrency())
                .status(getStatus())
                .siteAddress(getSiteAddress())
                .originalPrice(getOriginalPrice())
                .discount(getDiscount())
                .payment(getPayment())
                .products(getProducts())
                .mppTransactionId(getMppTransactionId());
        return builder;
    }

    /**
     * Class to build instances of {@link FinaliseFuelingRequest}.
     */
    public static class Builder {
        private String siteName;
        private Long timestamp;
        private Double volumeQuantity;
        private String volumeUnit;
        private Double finalPrice;
        private String currency;
        private String status;
        private String siteAddress;
        private Double originalPrice;
        private Double discount;
        private FinaliseFuelingRequestPayment payment;
        private List<FinaliseFuelingRequestProductsItems> products;
        private String mppTransactionId;



        /**
         * Setter for siteName.
         * @param  siteName  String value for siteName.
         * @return Builder
         */
        public Builder siteName(String siteName) {
            this.siteName = siteName;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  Long value for timestamp.
         * @return Builder
         */
        public Builder timestamp(Long timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Setter for volumeQuantity.
         * @param  volumeQuantity  Double value for volumeQuantity.
         * @return Builder
         */
        public Builder volumeQuantity(Double volumeQuantity) {
            this.volumeQuantity = volumeQuantity;
            return this;
        }

        /**
         * Setter for volumeUnit.
         * @param  volumeUnit  String value for volumeUnit.
         * @return Builder
         */
        public Builder volumeUnit(String volumeUnit) {
            this.volumeUnit = volumeUnit;
            return this;
        }

        /**
         * Setter for finalPrice.
         * @param  finalPrice  Double value for finalPrice.
         * @return Builder
         */
        public Builder finalPrice(Double finalPrice) {
            this.finalPrice = finalPrice;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for siteAddress.
         * @param  siteAddress  String value for siteAddress.
         * @return Builder
         */
        public Builder siteAddress(String siteAddress) {
            this.siteAddress = siteAddress;
            return this;
        }

        /**
         * Setter for originalPrice.
         * @param  originalPrice  Double value for originalPrice.
         * @return Builder
         */
        public Builder originalPrice(Double originalPrice) {
            this.originalPrice = originalPrice;
            return this;
        }

        /**
         * Setter for discount.
         * @param  discount  Double value for discount.
         * @return Builder
         */
        public Builder discount(Double discount) {
            this.discount = discount;
            return this;
        }

        /**
         * Setter for payment.
         * @param  payment  FinaliseFuelingRequestPayment value for payment.
         * @return Builder
         */
        public Builder payment(FinaliseFuelingRequestPayment payment) {
            this.payment = payment;
            return this;
        }

        /**
         * Setter for products.
         * @param  products  List of FinaliseFuelingRequestProductsItems value for products.
         * @return Builder
         */
        public Builder products(List<FinaliseFuelingRequestProductsItems> products) {
            this.products = products;
            return this;
        }

        /**
         * Setter for mppTransactionId.
         * @param  mppTransactionId  String value for mppTransactionId.
         * @return Builder
         */
        public Builder mppTransactionId(String mppTransactionId) {
            this.mppTransactionId = mppTransactionId;
            return this;
        }

        /**
         * Builds a new {@link FinaliseFuelingRequest} object using the set fields.
         * @return {@link FinaliseFuelingRequest}
         */
        public FinaliseFuelingRequest build() {
            return new FinaliseFuelingRequest(siteName, timestamp, volumeQuantity, volumeUnit,
                    finalPrice, currency, status, siteAddress, originalPrice, discount, payment,
                    products, mppTransactionId);
        }
    }
}
