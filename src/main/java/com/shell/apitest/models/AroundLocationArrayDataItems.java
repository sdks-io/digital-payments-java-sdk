/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for AroundLocationArrayDataItems type.
 */
public class AroundLocationArrayDataItems {
    private String id;
    private int type;
    private String name;
    private String addr;
    private double lat;
    private double lon;
    private List<Integer> amen;
    private List<Integer> fuel;
    private AroundLocationArrayDataItemsLoc loc;
    private String mppStationId;
    private String doubleSiteId;
    private List<AroundLocationArrayDataItemsOpeningHoursItems> openingHours;
    private String telephone;
    private String authorisationCode;
    private Integer mpPreauth;

    /**
     * Default constructor.
     */
    public AroundLocationArrayDataItems() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  type  int value for type.
     * @param  name  String value for name.
     * @param  addr  String value for addr.
     * @param  lat  double value for lat.
     * @param  lon  double value for lon.
     * @param  amen  List of Integer value for amen.
     * @param  fuel  List of Integer value for fuel.
     * @param  loc  AroundLocationArrayDataItemsLoc value for loc.
     * @param  mppStationId  String value for mppStationId.
     * @param  doubleSiteId  String value for doubleSiteId.
     * @param  openingHours  List of AroundLocationArrayDataItemsOpeningHoursItems value for
     *         openingHours.
     * @param  telephone  String value for telephone.
     * @param  authorisationCode  String value for authorisationCode.
     * @param  mpPreauth  Integer value for mpPreauth.
     */
    public AroundLocationArrayDataItems(
            String id,
            int type,
            String name,
            String addr,
            double lat,
            double lon,
            List<Integer> amen,
            List<Integer> fuel,
            AroundLocationArrayDataItemsLoc loc,
            String mppStationId,
            String doubleSiteId,
            List<AroundLocationArrayDataItemsOpeningHoursItems> openingHours,
            String telephone,
            String authorisationCode,
            Integer mpPreauth) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.addr = addr;
        this.lat = lat;
        this.lon = lon;
        this.amen = amen;
        this.fuel = fuel;
        this.loc = loc;
        this.mppStationId = mppStationId;
        this.doubleSiteId = doubleSiteId;
        this.openingHours = openingHours;
        this.telephone = telephone;
        this.authorisationCode = authorisationCode;
        this.mpPreauth = mpPreauth;
    }

    /**
     * Getter for Id.
     * The station’s unique site identifier – this must be ignored
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The station’s unique site identifier – this must be ignored
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Type.
     * All fuel stations are of at least one Type, indicating whether it is Shell-branded or not,
     * and if the station can be used by trucks. Note that a station can have more than one Type
     * (e.g. Shell retail sites (Type=0) can also be truck friendly (Type=2)). Type values are as
     * follows: * 0 = Shell owned/branded stations that are not also Type=2 or Type=3 * 1 = Partner
     * stations accepting Shell Card * 2 = Shell owned/branded stations that are truck friendly but
     * not Type=3 * 3 = Shell owned/branded stations that are truck only
     * @return Returns the int
     */
    @JsonGetter("type")
    public int getType() {
        return type;
    }

    /**
     * Setter for Type.
     * All fuel stations are of at least one Type, indicating whether it is Shell-branded or not,
     * and if the station can be used by trucks. Note that a station can have more than one Type
     * (e.g. Shell retail sites (Type=0) can also be truck friendly (Type=2)). Type values are as
     * follows: * 0 = Shell owned/branded stations that are not also Type=2 or Type=3 * 1 = Partner
     * stations accepting Shell Card * 2 = Shell owned/branded stations that are truck friendly but
     * not Type=3 * 3 = Shell owned/branded stations that are truck only
     * @param type Value for int
     */
    @JsonSetter("type")
    public void setType(int type) {
        this.type = type;
    }

    /**
     * Getter for Name.
     * The name of the site
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the site
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Addr.
     * The side address as a concatenation of address information
     * @return Returns the String
     */
    @JsonGetter("addr")
    public String getAddr() {
        return addr;
    }

    /**
     * Setter for Addr.
     * The side address as a concatenation of address information
     * @param addr Value for String
     */
    @JsonSetter("addr")
    public void setAddr(String addr) {
        this.addr = addr;
    }

    /**
     * Getter for Lat.
     * The site’s latitude
     * @return Returns the double
     */
    @JsonGetter("lat")
    public double getLat() {
        return lat;
    }

    /**
     * Setter for Lat.
     * The site’s latitude
     * @param lat Value for double
     */
    @JsonSetter("lat")
    public void setLat(double lat) {
        this.lat = lat;
    }

    /**
     * Getter for Lon.
     * The site’s longitude
     * @return Returns the double
     */
    @JsonGetter("lon")
    public double getLon() {
        return lon;
    }

    /**
     * Setter for Lon.
     * The site’s longitude
     * @param lon Value for double
     */
    @JsonSetter("lon")
    public void setLon(double lon) {
        this.lon = lon;
    }

    /**
     * Getter for Amen.
     * An array of amenities available at the station (see above for complete list)
     * @return Returns the List of Integer
     */
    @JsonGetter("amen")
    public List<Integer> getAmen() {
        return amen;
    }

    /**
     * Setter for Amen.
     * An array of amenities available at the station (see above for complete list)
     * @param amen Value for List of Integer
     */
    @JsonSetter("amen")
    public void setAmen(List<Integer> amen) {
        this.amen = amen;
    }

    /**
     * Getter for Fuel.
     * An array of fuels* available at the station. Global Product Group names: * 8 = CNG * 10 =
     * Premium Gasoline * 11 = Premium Diesel * 12 = Fuelsave Midgrade Gasoline * 13 = Fuelsave
     * Regular Diesel * 14 = Midgrade Gasoline * 15 = Low Octane gasoline * 16 = Regular Diesel * 17
     * = Autogas LPG * 18 = Auto/RV Propane * 20 = Hydrogen * 21 = Kerosene * 22 = Super Premium
     * Gasoline * 23 = Unleaded Super * 24 = Truck Diesel * 25 = Super98 * 26 = GTL * 27 = Fuelsave
     * 98 * 28 = LNG * 29 = DieselFit * 30 = Shell Recharge *An external mapping table may need to
     * be maintained if it is required to display true fuel product names (as visible on the site)
     * @return Returns the List of Integer
     */
    @JsonGetter("fuel")
    public List<Integer> getFuel() {
        return fuel;
    }

    /**
     * Setter for Fuel.
     * An array of fuels* available at the station. Global Product Group names: * 8 = CNG * 10 =
     * Premium Gasoline * 11 = Premium Diesel * 12 = Fuelsave Midgrade Gasoline * 13 = Fuelsave
     * Regular Diesel * 14 = Midgrade Gasoline * 15 = Low Octane gasoline * 16 = Regular Diesel * 17
     * = Autogas LPG * 18 = Auto/RV Propane * 20 = Hydrogen * 21 = Kerosene * 22 = Super Premium
     * Gasoline * 23 = Unleaded Super * 24 = Truck Diesel * 25 = Super98 * 26 = GTL * 27 = Fuelsave
     * 98 * 28 = LNG * 29 = DieselFit * 30 = Shell Recharge *An external mapping table may need to
     * be maintained if it is required to display true fuel product names (as visible on the site)
     * @param fuel Value for List of Integer
     */
    @JsonSetter("fuel")
    public void setFuel(List<Integer> fuel) {
        this.fuel = fuel;
    }

    /**
     * Getter for Loc.
     * Object containing address details/elements
     * @return Returns the AroundLocationArrayDataItemsLoc
     */
    @JsonGetter("loc")
    public AroundLocationArrayDataItemsLoc getLoc() {
        return loc;
    }

    /**
     * Setter for Loc.
     * Object containing address details/elements
     * @param loc Value for AroundLocationArrayDataItemsLoc
     */
    @JsonSetter("loc")
    public void setLoc(AroundLocationArrayDataItemsLoc loc) {
        this.loc = loc;
    }

    /**
     * Getter for MppStationId.
     * This is the 5-digit Shell Station ID. Leading ‘0’ should be dropped and only last four
     * digits, should be used. E.G. for ‘00123’, only ‘0123’ should be used and for ‘04567’ only
     * ‘4567’ should be used.
     * @return Returns the String
     */
    @JsonGetter("mpp_station_id")
    public String getMppStationId() {
        return mppStationId;
    }

    /**
     * Setter for MppStationId.
     * This is the 5-digit Shell Station ID. Leading ‘0’ should be dropped and only last four
     * digits, should be used. E.G. for ‘00123’, only ‘0123’ should be used and for ‘04567’ only
     * ‘4567’ should be used.
     * @param mppStationId Value for String
     */
    @JsonSetter("mpp_station_id")
    public void setMppStationId(String mppStationId) {
        this.mppStationId = mppStationId;
    }

    /**
     * Getter for DoubleSiteId.
     * The Mobile Payment Platform recognises a user being located at a Shell Station if their GPS
     * is within 300m of a Shell station. Some locations will return multiple Shell Stations within
     * a 300 meter radius. This is an issue for Mobile Payments as it needs to accurately identify
     * the station the Customer is located at to ensure the correct pump is released In Germany such
     * locations have been identified and each Station has been assigned a unique letter (e.g. A, B,
     * C). These letters are clearly visible at the stations. If a Mobile Payments user is located
     * at such a location, they will need to identify the Station by identifying and specifying the
     * Station’s corresponding letter as part of the refuelling journey. The double_site_id is used
     * to store the Stations unique letter/ID value. It’s only populated if/when 1 or more stations
     * are within 300m from this station.
     * @return Returns the String
     */
    @JsonGetter("double_site_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDoubleSiteId() {
        return doubleSiteId;
    }

    /**
     * Setter for DoubleSiteId.
     * The Mobile Payment Platform recognises a user being located at a Shell Station if their GPS
     * is within 300m of a Shell station. Some locations will return multiple Shell Stations within
     * a 300 meter radius. This is an issue for Mobile Payments as it needs to accurately identify
     * the station the Customer is located at to ensure the correct pump is released In Germany such
     * locations have been identified and each Station has been assigned a unique letter (e.g. A, B,
     * C). These letters are clearly visible at the stations. If a Mobile Payments user is located
     * at such a location, they will need to identify the Station by identifying and specifying the
     * Station’s corresponding letter as part of the refuelling journey. The double_site_id is used
     * to store the Stations unique letter/ID value. It’s only populated if/when 1 or more stations
     * are within 300m from this station.
     * @param doubleSiteId Value for String
     */
    @JsonSetter("double_site_id")
    public void setDoubleSiteId(String doubleSiteId) {
        this.doubleSiteId = doubleSiteId;
    }

    /**
     * Getter for OpeningHours.
     * An Array of the station’s opening hours. This may have opening and closing times in hours,
     * minutes and the day of the week.
     * @return Returns the List of AroundLocationArrayDataItemsOpeningHoursItems
     */
    @JsonGetter("opening_hours")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AroundLocationArrayDataItemsOpeningHoursItems> getOpeningHours() {
        return openingHours;
    }

    /**
     * Setter for OpeningHours.
     * An Array of the station’s opening hours. This may have opening and closing times in hours,
     * minutes and the day of the week.
     * @param openingHours Value for List of AroundLocationArrayDataItemsOpeningHoursItems
     */
    @JsonSetter("opening_hours")
    public void setOpeningHours(List<AroundLocationArrayDataItemsOpeningHoursItems> openingHours) {
        this.openingHours = openingHours;
    }

    /**
     * Getter for Telephone.
     * Station’s contact telephone number
     * @return Returns the String
     */
    @JsonGetter("telephone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTelephone() {
        return telephone;
    }

    /**
     * Setter for Telephone.
     * Station’s contact telephone number
     * @param telephone Value for String
     */
    @JsonSetter("telephone")
    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }

    /**
     * Getter for AuthorisationCode.
     * Station’s authorisation code
     * @return Returns the String
     */
    @JsonGetter("authorisation_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAuthorisationCode() {
        return authorisationCode;
    }

    /**
     * Setter for AuthorisationCode.
     * Station’s authorisation code
     * @param authorisationCode Value for String
     */
    @JsonSetter("authorisation_code")
    public void setAuthorisationCode(String authorisationCode) {
        this.authorisationCode = authorisationCode;
    }

    /**
     * Getter for MpPreauth.
     * Station’s mobile payment preauthorisation value
     * @return Returns the Integer
     */
    @JsonGetter("mp_preauth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMpPreauth() {
        return mpPreauth;
    }

    /**
     * Setter for MpPreauth.
     * Station’s mobile payment preauthorisation value
     * @param mpPreauth Value for Integer
     */
    @JsonSetter("mp_preauth")
    public void setMpPreauth(Integer mpPreauth) {
        this.mpPreauth = mpPreauth;
    }

    /**
     * Converts this AroundLocationArrayDataItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AroundLocationArrayDataItems [" + "id=" + id + ", type=" + type + ", name=" + name
                + ", addr=" + addr + ", lat=" + lat + ", lon=" + lon + ", amen=" + amen + ", fuel="
                + fuel + ", loc=" + loc + ", mppStationId=" + mppStationId + ", doubleSiteId="
                + doubleSiteId + ", openingHours=" + openingHours + ", telephone=" + telephone
                + ", authorisationCode=" + authorisationCode + ", mpPreauth=" + mpPreauth + "]";
    }

    /**
     * Builds a new {@link AroundLocationArrayDataItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AroundLocationArrayDataItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, type, name, addr, lat, lon, amen, fuel, loc, mppStationId)
                .doubleSiteId(getDoubleSiteId())
                .openingHours(getOpeningHours())
                .telephone(getTelephone())
                .authorisationCode(getAuthorisationCode())
                .mpPreauth(getMpPreauth());
        return builder;
    }

    /**
     * Class to build instances of {@link AroundLocationArrayDataItems}.
     */
    public static class Builder {
        private String id;
        private int type;
        private String name;
        private String addr;
        private double lat;
        private double lon;
        private List<Integer> amen;
        private List<Integer> fuel;
        private AroundLocationArrayDataItemsLoc loc;
        private String mppStationId;
        private String doubleSiteId;
        private List<AroundLocationArrayDataItemsOpeningHoursItems> openingHours;
        private String telephone;
        private String authorisationCode;
        private Integer mpPreauth;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  type  int value for type.
         * @param  name  String value for name.
         * @param  addr  String value for addr.
         * @param  lat  double value for lat.
         * @param  lon  double value for lon.
         * @param  amen  List of Integer value for amen.
         * @param  fuel  List of Integer value for fuel.
         * @param  loc  AroundLocationArrayDataItemsLoc value for loc.
         * @param  mppStationId  String value for mppStationId.
         */
        public Builder(String id, int type, String name, String addr, double lat, double lon,
                List<Integer> amen, List<Integer> fuel, AroundLocationArrayDataItemsLoc loc,
                String mppStationId) {
            this.id = id;
            this.type = type;
            this.name = name;
            this.addr = addr;
            this.lat = lat;
            this.lon = lon;
            this.amen = amen;
            this.fuel = fuel;
            this.loc = loc;
            this.mppStationId = mppStationId;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  int value for type.
         * @return Builder
         */
        public Builder type(int type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for addr.
         * @param  addr  String value for addr.
         * @return Builder
         */
        public Builder addr(String addr) {
            this.addr = addr;
            return this;
        }

        /**
         * Setter for lat.
         * @param  lat  double value for lat.
         * @return Builder
         */
        public Builder lat(double lat) {
            this.lat = lat;
            return this;
        }

        /**
         * Setter for lon.
         * @param  lon  double value for lon.
         * @return Builder
         */
        public Builder lon(double lon) {
            this.lon = lon;
            return this;
        }

        /**
         * Setter for amen.
         * @param  amen  List of Integer value for amen.
         * @return Builder
         */
        public Builder amen(List<Integer> amen) {
            this.amen = amen;
            return this;
        }

        /**
         * Setter for fuel.
         * @param  fuel  List of Integer value for fuel.
         * @return Builder
         */
        public Builder fuel(List<Integer> fuel) {
            this.fuel = fuel;
            return this;
        }

        /**
         * Setter for loc.
         * @param  loc  AroundLocationArrayDataItemsLoc value for loc.
         * @return Builder
         */
        public Builder loc(AroundLocationArrayDataItemsLoc loc) {
            this.loc = loc;
            return this;
        }

        /**
         * Setter for mppStationId.
         * @param  mppStationId  String value for mppStationId.
         * @return Builder
         */
        public Builder mppStationId(String mppStationId) {
            this.mppStationId = mppStationId;
            return this;
        }

        /**
         * Setter for doubleSiteId.
         * @param  doubleSiteId  String value for doubleSiteId.
         * @return Builder
         */
        public Builder doubleSiteId(String doubleSiteId) {
            this.doubleSiteId = doubleSiteId;
            return this;
        }

        /**
         * Setter for openingHours.
         * @param  openingHours  List of AroundLocationArrayDataItemsOpeningHoursItems value for
         *         openingHours.
         * @return Builder
         */
        public Builder openingHours(
                List<AroundLocationArrayDataItemsOpeningHoursItems> openingHours) {
            this.openingHours = openingHours;
            return this;
        }

        /**
         * Setter for telephone.
         * @param  telephone  String value for telephone.
         * @return Builder
         */
        public Builder telephone(String telephone) {
            this.telephone = telephone;
            return this;
        }

        /**
         * Setter for authorisationCode.
         * @param  authorisationCode  String value for authorisationCode.
         * @return Builder
         */
        public Builder authorisationCode(String authorisationCode) {
            this.authorisationCode = authorisationCode;
            return this;
        }

        /**
         * Setter for mpPreauth.
         * @param  mpPreauth  Integer value for mpPreauth.
         * @return Builder
         */
        public Builder mpPreauth(Integer mpPreauth) {
            this.mpPreauth = mpPreauth;
            return this;
        }

        /**
         * Builds a new {@link AroundLocationArrayDataItems} object using the set fields.
         * @return {@link AroundLocationArrayDataItems}
         */
        public AroundLocationArrayDataItems build() {
            return new AroundLocationArrayDataItems(id, type, name, addr, lat, lon, amen, fuel, loc,
                    mppStationId, doubleSiteId, openingHours, telephone, authorisationCode,
                    mpPreauth);
        }
    }
}
