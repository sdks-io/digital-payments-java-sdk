/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for MppAccesTokenResponse type.
 */
public class MppAccesTokenResponse {
    private String accessToken;
    private String tokenType;
    private Long expiresIn;
    private String scope;

    /**
     * Default constructor.
     */
    public MppAccesTokenResponse() {
        tokenType = "bearer";
        scope = "basic openid";
    }

    /**
     * Initialization constructor.
     * @param  accessToken  String value for accessToken.
     * @param  tokenType  String value for tokenType.
     * @param  expiresIn  Long value for expiresIn.
     * @param  scope  String value for scope.
     */
    public MppAccesTokenResponse(
            String accessToken,
            String tokenType,
            Long expiresIn,
            String scope) {
        this.accessToken = accessToken;
        this.tokenType = tokenType;
        this.expiresIn = expiresIn;
        this.scope = scope;
    }

    /**
     * Getter for AccessToken.
     * It is the token used in the requests that required to authenticate an user.
     * @return Returns the String
     */
    @JsonGetter("access_token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessToken() {
        return accessToken;
    }

    /**
     * Setter for AccessToken.
     * It is the token used in the requests that required to authenticate an user.
     * @param accessToken Value for String
     */
    @JsonSetter("access_token")
    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    /**
     * Getter for TokenType.
     * type of token provided
     * @return Returns the String
     */
    @JsonGetter("token_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTokenType() {
        return tokenType;
    }

    /**
     * Setter for TokenType.
     * type of token provided
     * @param tokenType Value for String
     */
    @JsonSetter("token_type")
    public void setTokenType(String tokenType) {
        this.tokenType = tokenType;
    }

    /**
     * Getter for ExpiresIn.
     * validity of the access token in seconds
     * @return Returns the Long
     */
    @JsonGetter("expires_in")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getExpiresIn() {
        return expiresIn;
    }

    /**
     * Setter for ExpiresIn.
     * validity of the access token in seconds
     * @param expiresIn Value for Long
     */
    @JsonSetter("expires_in")
    public void setExpiresIn(Long expiresIn) {
        this.expiresIn = expiresIn;
    }

    /**
     * Getter for Scope.
     * scope for the authentication protocol
     * @return Returns the String
     */
    @JsonGetter("scope")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getScope() {
        return scope;
    }

    /**
     * Setter for Scope.
     * scope for the authentication protocol
     * @param scope Value for String
     */
    @JsonSetter("scope")
    public void setScope(String scope) {
        this.scope = scope;
    }

    /**
     * Converts this MppAccesTokenResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MppAccesTokenResponse [" + "accessToken=" + accessToken + ", tokenType=" + tokenType
                + ", expiresIn=" + expiresIn + ", scope=" + scope + "]";
    }

    /**
     * Builds a new {@link MppAccesTokenResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MppAccesTokenResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accessToken(getAccessToken())
                .tokenType(getTokenType())
                .expiresIn(getExpiresIn())
                .scope(getScope());
        return builder;
    }

    /**
     * Class to build instances of {@link MppAccesTokenResponse}.
     */
    public static class Builder {
        private String accessToken;
        private String tokenType = "bearer";
        private Long expiresIn;
        private String scope = "basic openid";



        /**
         * Setter for accessToken.
         * @param  accessToken  String value for accessToken.
         * @return Builder
         */
        public Builder accessToken(String accessToken) {
            this.accessToken = accessToken;
            return this;
        }

        /**
         * Setter for tokenType.
         * @param  tokenType  String value for tokenType.
         * @return Builder
         */
        public Builder tokenType(String tokenType) {
            this.tokenType = tokenType;
            return this;
        }

        /**
         * Setter for expiresIn.
         * @param  expiresIn  Long value for expiresIn.
         * @return Builder
         */
        public Builder expiresIn(Long expiresIn) {
            this.expiresIn = expiresIn;
            return this;
        }

        /**
         * Setter for scope.
         * @param  scope  String value for scope.
         * @return Builder
         */
        public Builder scope(String scope) {
            this.scope = scope;
            return this;
        }

        /**
         * Builds a new {@link MppAccesTokenResponse} object using the set fields.
         * @return {@link MppAccesTokenResponse}
         */
        public MppAccesTokenResponse build() {
            return new MppAccesTokenResponse(accessToken, tokenType, expiresIn, scope);
        }
    }
}
