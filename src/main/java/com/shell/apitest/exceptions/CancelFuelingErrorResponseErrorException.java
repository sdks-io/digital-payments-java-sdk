/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.shell.apitest.exceptions;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.shell.apitest.models.MppError;
import io.apimatic.coreinterfaces.http.Context;
import java.util.List;

/**
 * This is a model class for CancelFuelingErrorResponseErrorException type.
 */
public class CancelFuelingErrorResponseErrorException extends ApiException {
    private static final long serialVersionUID = -2931466486720430549L;
    private String errorCode;
    private String errorDescription;
    private List<MppError> errors;

    /**
     * Initialization constructor.
     * @param   reason  The reason for throwing exception
     * @param   context The context of the API exception
     */
    public CancelFuelingErrorResponseErrorException(String reason, Context context) {
        super(reason, context);
    }


    /**
     * Getter for ErrorCode.
     * The high level error code (e.g. missing data)
     * @return Returns the String
     */
    @JsonGetter("errorCode")
    public String getErrorCode() {
        return this.errorCode;
    }

    /**
     * Setter for ErrorCode.
     * The high level error code (e.g. missing data)
     * @param errorCode Value for String
     */
    @JsonSetter("errorCode")
    private void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * Getter for ErrorDescription.
     * The high level error message (e.g. mandatory fields have not been specified.
     * @return Returns the String
     */
    @JsonGetter("errorDescription")
    public String getErrorDescription() {
        return this.errorDescription;
    }

    /**
     * Setter for ErrorDescription.
     * The high level error message (e.g. mandatory fields have not been specified.
     * @param errorDescription Value for String
     */
    @JsonSetter("errorDescription")
    private void setErrorDescription(String errorDescription) {
        this.errorDescription = errorDescription;
    }

    /**
     * Getter for Errors.
     * Array of error objects. Majority of the time the errorCode and errorDescription will suffice
     * @return Returns the List of MppError
     */
    @JsonGetter("errors")
    public List<MppError> getErrors() {
        return this.errors;
    }

    /**
     * Setter for Errors.
     * Array of error objects. Majority of the time the errorCode and errorDescription will suffice
     * @param errors Value for List of MppError
     */
    @JsonSetter("errors")
    private void setErrors(List<MppError> errors) {
        this.errors = errors;
    }
}
